"""empty message

Revision ID: fd61eb071b42
Revises: 
Create Date: 2023-07-03 09:11:47.641239

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "fd61eb071b42"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "templates",
        sa.Column("currents_path", sa.String(), nullable=False),
        sa.Column("waves_path", sa.String(), nullable=False),
        sa.Column("simulated_leaks_path", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("angle_from_north", sa.Float(), nullable=False),
        sa.Column("height", sa.Float(), nullable=True),
        sa.Column("porosity", sa.JSON(), nullable=True),
        sa.Column("wall_area", sa.JSON(), nullable=True),
        sa.Column("inclination", sa.JSON(), nullable=True),
        sa.Column("internal_volume", sa.Float(), nullable=True),
        sa.Column("length", sa.Float(), nullable=True),
        sa.Column("width", sa.Float(), nullable=True),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_templates")),
    )
    op.create_table(
        "events",
        sa.Column("type_", sa.String(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("template_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["templates.id"],
            name=op.f("fk_events_template_id_templates"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events")),
    )
    op.create_table(
        "sensors",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("x", sa.Float(), nullable=False),
        sa.Column("y", sa.Float(), nullable=False),
        sa.Column("z", sa.Float(), nullable=False),
        sa.Column("template_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["templates.id"],
            name=op.f("fk_sensors_template_id_templates"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_sensors")),
        sa.UniqueConstraint("name", name=op.f("uq_sensors_name")),
    )
    op.create_table(
        "time_series_data",
        sa.Column("ppmv", sa.Float(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("sensor_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sensor_id"],
            ["sensors.id"],
            name=op.f("fk_time_series_data_sensor_id_sensors"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_time_series_data")),
    )
    op.create_table(
        "anomaly_detections",
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("time_series_data_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["time_series_data_id"],
            ["time_series_data.id"],
            name=op.f(
                "fk_anomaly_detections_time_series_data_id_time_series_data"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_anomaly_detections")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("anomaly_detections")
    op.drop_table("time_series_data")
    op.drop_table("sensors")
    op.drop_table("events")
    op.drop_table("templates")
    # ### end Alembic commands ###
