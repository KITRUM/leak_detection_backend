"""empty message

Revision ID: 1a186b2aa013
Revises: 
Create Date: 2023-09-26 19:10:52.948131

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '1a186b2aa013'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensors_configurations',
    sa.Column('pinned', sa.Boolean(), nullable=False),
    sa.Column('interactive_feedback_mode', sa.Boolean(), nullable=False),
    sa.Column('anomaly_detection_initial_baseline_raw', sa.BLOB(), nullable=False),
    sa.Column('last_baseline_selection_timestamp', sa.DateTime(), nullable=True),
    sa.Column('last_baseline_update_timestamp', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sensors_configurations'))
    )
    op.create_table('system_events',
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_events'))
    )
    op.create_table('templates',
    sa.Column('currents_path', sa.String(), nullable=False),
    sa.Column('waves_path', sa.String(), nullable=False),
    sa.Column('simulated_leaks_path', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('angle_from_north', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('z_roof', sa.Float(), nullable=True),
    sa.Column('porosity', sa.JSON(), nullable=True),
    sa.Column('wall_area', sa.JSON(), nullable=True),
    sa.Column('inclination', sa.JSON(), nullable=True),
    sa.Column('internal_volume', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_templates'))
    )
    op.create_table('sensors',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('x', sa.Float(), nullable=False),
    sa.Column('y', sa.Float(), nullable=False),
    sa.Column('z', sa.Float(), nullable=False),
    sa.Column('configuration_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['configuration_id'], ['sensors_configurations.id'], name=op.f('fk_sensors_configuration_id_sensors_configurations')),
    sa.ForeignKeyConstraint(['template_id'], ['templates.id'], name=op.f('fk_sensors_template_id_templates')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sensors')),
    sa.UniqueConstraint('name', name=op.f('uq_sensors_name'))
    )
    op.create_table('sensors_events',
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.id'], name=op.f('fk_sensors_events_sensor_id_sensors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sensors_events'))
    )
    op.create_table('time_series_data',
    sa.Column('ppmv', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.id'], name=op.f('fk_time_series_data_sensor_id_sensors'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_time_series_data'))
    )
    op.create_table('anomaly_detections',
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('interactive_feedback_mode', sa.Boolean(), nullable=False),
    sa.Column('time_series_data_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['time_series_data_id'], ['time_series_data.id'], name=op.f('fk_anomaly_detections_time_series_data_id_time_series_data')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_anomaly_detections'))
    )
    op.create_table('simulation_detections',
    sa.Column('leakage', sa.JSON(), nullable=False),
    sa.Column('concentrations', sa.String(), nullable=False),
    sa.Column('anomaly_detection_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['anomaly_detection_id'], ['anomaly_detections.id'], name=op.f('fk_simulation_detections_anomaly_detection_id_anomaly_detections')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_simulation_detections'))
    )
    op.create_table('estimations_summaries',
    sa.Column('result', sa.String(), nullable=False),
    sa.Column('detection_id', sa.Integer(), nullable=True),
    sa.Column('sensor_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['detection_id'], ['simulation_detections.id'], name=op.f('fk_estimations_summaries_detection_id_simulation_detections'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.id'], name=op.f('fk_estimations_summaries_sensor_id_sensors'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_estimations_summaries'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('estimations_summaries')
    op.drop_table('simulation_detections')
    op.drop_table('anomaly_detections')
    op.drop_table('time_series_data')
    op.drop_table('sensors_events')
    op.drop_table('sensors')
    op.drop_table('templates')
    op.drop_table('system_events')
    op.drop_table('sensors_configurations')
    # ### end Alembic commands ###
